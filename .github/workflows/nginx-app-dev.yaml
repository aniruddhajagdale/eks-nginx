name: Nginx web server CI/CD - Dev

on:
  push:
    branches: [dev]
    paths:
      - 'nginx/**'
      - '.github/workflows/nginx-app-dev.yaml'

permissions:
  id-token: write
  contents: read

env: 
  NAMESPACE: nginx-dev
  BLUE_RELEASE: nginx-blue
  GREEN_RELEASE: nginx-green
  STABLE_SERVICE: nginx-stable
  APP_PORT: 8080

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.TF_VAR_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build and Push Docker Image to ECR
      #   env:
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:$IMAGE_TAG
      #     echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      #     docker build -t $IMAGE_URI ./nginx
      #     docker push $IMAGE_URI

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.TF_VAR_REGION }} --name ${{ vars.CLUSTER_NAME }}

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Determine Active and Inactive Release
        id: release-check
        run: |
          ACTIVE_RELEASE=$(kubectl get svc $STABLE_SERVICE -n $NAMESPACE -o jsonpath='{.spec.selector.app\.kubernetes\.io/instance}')
          if [[ "$ACTIVE_RELEASE" == "$BLUE_RELEASE" ]]; then
            echo "ACTIVE_RELEASE=$BLUE_RELEASE" >> $GITHUB_ENV
            echo "INACTIVE_RELEASE=$GREEN_RELEASE" >> $GITHUB_ENV
          else
            echo "ACTIVE_RELEASE=$GREEN_RELEASE" >> $GITHUB_ENV
            echo "INACTIVE_RELEASE=$BLUE_RELEASE" >> $GITHUB_ENV
          fi
          
      - name: Add Bitnami repo
        run: helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update

      - name: Upgrade Inactive Helm Release
        run: |
          NAMESPACE=${{ env.NAMESPACE }}
          CHART_NAME=bitnami/nginx
          helm upgrade $INACTIVE_RELEASE $CHART_NAME --namespace $NAMESPACE \

