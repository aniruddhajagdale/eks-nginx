name: Nginx web server Bootstrap (Blue/Green Setup)

on:
  workflow_dispatch:

env:
  NAMESPACE: nginx-dev
  BLUE_RELEASE: nginx-blue
  GREEN_RELEASE: nginx-green
  STABLE_SERVICE: nginx
  APP_PORT: 8080
  ECR_REPO: ${{ vars.ECR_REPO_NAME }}

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials (Access Key)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.TF_VAR_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build and Push Docker Image to ECR
      #   env:
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:$IMAGE_TAG
      #     echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      #     docker build -t $IMAGE_URI ./nginx
      #     docker push $IMAGE_URI

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.TF_VAR_REGION }} --name ${{ vars.CLUSTER_NAME }}

      # - name: Create Namespace (if not exists)
      #   run: |
      #     kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      - name: Install Helm
        uses: azure/setup-helm@v3

      # - name: Add Bitnami repo
      #   run: helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update

      - name: Deploy BLUE release
        run: |
          RELEASE_NAME=${{ env.BLUE_RELEASE }}
          NAMESPACE=${{ env.NAMESPACE }}
          CHART_NAME=bitnami/nginx
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

          helm upgrade --install $RELEASE_NAME $CHART_NAME \
          --namespace $NAMESPACE \
          --create-namespace \
          --set service.type=ClusterIP

      - name: Deploy GREEN release
        run: |
          helm upgrade --install $HELM_RELEASE_GREEN bitnami/nginx \
            --namespace $NAMESPACE \
            --create-namespace \
            --set service.type=ClusterIP       

      - name: Create Stable Service (points to BLUE)
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: $STABLE_SERVICE
            namespace: $NAMESPACE
          spec:
            selector:
              app.kubernetes.io/instance: $BLUE_RELEASE
            ports:
              - protocol: TCP
                port: 80
                targetPort: $APP_PORT
            type: LoadBalancer
          EOF
